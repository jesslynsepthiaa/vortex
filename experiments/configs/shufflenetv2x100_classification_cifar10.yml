experiment_name: shufflenetv2x100_softmax_cifar10
logging: None
checkpoint: None
device: 'cuda:0'
output_directory: experiments/outputs
dataset: {
  train: {
    name: CIFAR10,
    args: {
      root: external/datasets,
      train: True,
      download: True
    },
  },
  eval: {
    name: CIFAR10,
    args: {
      root: external/datasets,
      train: False,
      download: True
    }
  },
}
dataloader: {
  module: PytorchDataLoader,
  args: {
    num_workers: 0,
    batch_size: 256,
    shuffle: True,
  },
}
model: {
  name: softmax,
  network_args: {
    backbone: shufflenetv2_x0.5,
    n_classes: 10,
    pretrained_backbone: True,
    freeze_backbone: False
  },
  preprocess_args: {
    input_size: 32,
    input_normalization: {
      mean: [0.4914, 0.4822, 0.4465],
      std: [0.2023, 0.1994, 0.2010],
      scaler: 255,
    }
  },
  loss_args: {
    reduction: mean
  },
  postprocess_args: {}
}
trainer: {
  optimizer: {
    method: SGD,
    args: {
      lr: 0.0263,
      momentum: 0.9,
      weight_decay: 0.0005,
    }
  },
  lr_scheduler : {
    method : CosineLRWithWarmUp,
    args : {
      t_initial : 20,
      t_mul : 1.0,
      lr_min : 0.00001,
      warmup_lr_init: 0.00001,
      warmup_t: 2,
      cycle_limit : 1,
      t_in_epochs : True,
      decay_rate : 0.1,
    }
  },
  driver: {
    module: DefaultTrainer,
    args: {}
  },
  epoch: 20,
  save_epoch: 5
}
validator: {
  args: {},
  val_epoch: 1,
}
exporter : {
  module : onnx,
  args : {
    opset_version : 11,
  },
}